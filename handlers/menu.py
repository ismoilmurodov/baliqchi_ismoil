from aiogram import Router
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from geopy.geocoders import Nominatim

from back_end import get_categories
from keyboard.kb_menu import location_kb_uz, location_kb_ru, create_default_keyboard
from keyboards import main_menu_kb, main_menu_kb_ru
from middlewares import LanguageMiddleware
from state.order_state import OrderState

router = Router()

geolocator = Nominatim(user_agent="my_bot")


@router.message(lambda message: message.text in ["üìã Menu", "üìã –ú–µ–Ω—é"])
async def show_location_menu(message: Message):
    lang = LanguageMiddleware.get_language(message.from_user.id)
    message_context = "Kerakli bo'limni tanlang: " if lang == 'uz' else "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:"
    kb = location_kb_uz if lang == 'uz' else location_kb_ru
    await message.answer(message_context, reply_markup=kb)


@router.message(lambda message: message.text in ["üìç Joylashuvlar ro'yxati", "üìç –°–ø–∏—Å–æ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–π"])
async def send_location_list(message: Message):
    lang = LanguageMiddleware.get_language(message.from_user.id)
    message_context = "Joylashuvlar ro'yxati: kerakli manzilni tanlang." if lang == 'uz' else "–°–ø–∏—Å–æ–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–π: –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –º–µ—Å—Ç–æ."
    kb_name = "‚¨ÖÔ∏è Qaytish" if lang == 'uz' else "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"
    kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text=kb_name)]],
        resize_keyboard=True
    )
    await message.answer(message_context, reply_markup=kb)


@router.message(lambda message: message.text in ["‚¨ÖÔ∏è Qaytish", "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"])
async def send_location_request(message: Message):
    lang = LanguageMiddleware.get_language(message.from_user.id)
    message_context = "Asosiy menu!" if lang == 'uz' else "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!"
    kb = main_menu_kb if lang == 'uz' else main_menu_kb_ru
    await message.answer(message_context, reply_markup=kb)


@router.message(lambda message: message.location is not None)
async def confirm_location(message: Message, state: FSMContext):
    lang = LanguageMiddleware.get_language(message.from_user.id)

    latitude = message.location.latitude
    longitude = message.location.longitude

    location = geolocator.reverse((latitude, longitude), language='uz')

    if location:
        address = location.address
    else:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ.")
        return

    if lang == "uz":
        await message.answer(f"Sizning manzilingiz: {address}\n\nJoylashuvingiz tasdiqlandi! ‚úÖ")
    else:
        await message.answer(f"–í–∞—à –∞–¥—Ä–µ—Å: {address}\n\n–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ! ‚úÖ")

    # Button
    data = ['üì• Korzinka'] if lang == 'uz' else ['üì• –ö–æ—Ä–∑–∏–Ω–∞']
    categories = get_categories()
    data += [category['name'] for category in categories['categories']]
    data += ['‚¨ÖÔ∏è Qaytish'] if lang == 'uz' else ['‚¨ÖÔ∏è –ù–∞–∑–∞–¥']

    keyboard = create_default_keyboard(data)
    confirmation_text = "Kategoriyalarni tanlang" if lang == 'uz' else "–í—ã–±–∏—Ä–∞–π—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
    await message.answer(confirmation_text, reply_markup=keyboard)

    await state.set_state(OrderState.category)
